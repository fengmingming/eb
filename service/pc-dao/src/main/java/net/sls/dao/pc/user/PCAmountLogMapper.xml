<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.pc.user.PCAmountLogMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.pc.user.AmountLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="curAmount" property="curAmount" jdbcType="DECIMAL" />
    <result column="operator" property="operator" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, userId, money, operator, TYPE, createTime,remark
  </sql>
  <select id="selectAmountLogByUserId" resultType="map" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from amountLog
    <where> userId = #{userId,jdbcType=BIGINT}
    <if test=" type == 1  ">
  		and type = 1
  	</if>
  	<if test=" type == 2  ">
  		and type = 2
  	</if>
 	order by id desc 
    </where>
    <if test="start != null and number != null">
  		limit #{start,jdbcType=INTEGER},#{number,jdbcType=INTEGER}
  	</if>
  </select>
  <select id="countAmountLogByUserId" parameterType="map" resultType="long" >
    select count(*) from amountLog
    <where> userId = #{userId,jdbcType=BIGINT}
    <if test=" type == 1  ">
  		and type = 1
  	</if>
  	<if test=" type == 2  ">
  		and type = 2
  	</if>
  	</where>
  </select>	
  
  <insert id="insertAmountLog" parameterType="net.sls.dto.pc.user.AmountLog" >
    insert into amountLog (userId, money, 
      curAmount, operator, type, 
      createTime, remark)
    values (#{userId,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, 
      #{curAmount,jdbcType=DECIMAL}, #{operator,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  
</mapper>