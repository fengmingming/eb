<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.sls.dao.product.PavilionAreaMapper">
  <resultMap id="BaseResultMap" type="net.sls.dto.product.PavilionArea">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pavilionId" jdbcType="INTEGER" property="pavilionId" />
    <result column="paName" jdbcType="VARCHAR" property="paName" />
    <result column="isUse" jdbcType="INTEGER" property="isUse" />
    <result column="isDel" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pavilionId, paName, isUse, isDel
  </sql>
  <select id="selectByExample" parameterType="net.sls.dto.product.PavilionAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pavilionArea
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pavilionArea
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pavilionArea
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.product.PavilionAreaExample">
    delete from pavilionArea
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.product.PavilionArea">
    insert into pavilionArea (id, pavilionId, paName, 
      isUse, isDel)
    values (#{id,jdbcType=BIGINT}, #{pavilionId,jdbcType=INTEGER}, #{paName,jdbcType=VARCHAR}, 
      #{isUse,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.product.PavilionArea">
    insert into pavilionArea
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pavilionId != null">
        pavilionId,
      </if>
      <if test="paName != null">
        paName,
      </if>
      <if test="isUse != null">
        isUse,
      </if>
      <if test="isDel != null">
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pavilionId != null">
        #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="paName != null">
        #{paName,jdbcType=VARCHAR},
      </if>
      <if test="isUse != null">
        #{isUse,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.product.PavilionAreaExample" resultType="java.lang.Integer">
    select count(*) from pavilionArea
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pavilionArea
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pavilionId != null">
        pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      </if>
      <if test="record.paName != null">
        paName = #{record.paName,jdbcType=VARCHAR},
      </if>
      <if test="record.isUse != null">
        isUse = #{record.isUse,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        isDel = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pavilionArea
    set id = #{record.id,jdbcType=BIGINT},
      pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      paName = #{record.paName,jdbcType=VARCHAR},
      isUse = #{record.isUse,jdbcType=INTEGER},
      isDel = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.product.PavilionArea">
    update pavilionArea
    <set>
      <if test="pavilionId != null">
        pavilionId = #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="paName != null">
        paName = #{paName,jdbcType=VARCHAR},
      </if>
      <if test="isUse != null">
        isUse = #{isUse,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.product.PavilionArea">
    update pavilionArea
    set pavilionId = #{pavilionId,jdbcType=INTEGER},
      paName = #{paName,jdbcType=VARCHAR},
      isUse = #{isUse,jdbcType=INTEGER},
      isDel = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>