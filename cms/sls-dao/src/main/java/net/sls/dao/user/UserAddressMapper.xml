<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.user.UserAddressMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.user.UserAddress" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="pavilionId" property="pavilionId" jdbcType="INTEGER" />
    <result column="pavilionCode" property="pavilionCode" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="INTEGER" />
    <result column="district" property="district" jdbcType="INTEGER" />
    <result column="community" property="community" jdbcType="INTEGER" />
    <result column="addressDetail" property="addressDetail" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="isdefault" property="isdefault" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, pavilionId, pavilionCode, province, city, district, community, addressDetail, 
    isdel, createTime, postcode, mobile, receiver, phone, isdefault
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.sls.dto.user.UserAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from userAddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from userAddress
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from userAddress
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.user.UserAddressExample" >
    delete from userAddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.user.UserAddress" >
    insert into userAddress (id, userId, pavilionId, 
      pavilionCode, province, city, 
      district, community, addressDetail, 
      isdel, createTime, postcode, 
      mobile, receiver, phone, 
      isdefault)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{pavilionId,jdbcType=INTEGER}, 
      #{pavilionCode,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, #{city,jdbcType=INTEGER}, 
      #{district,jdbcType=INTEGER}, #{community,jdbcType=INTEGER}, #{addressDetail,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{postcode,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{isdefault,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.user.UserAddress" >
    insert into userAddress
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="pavilionId != null" >
        pavilionId,
      </if>
      <if test="pavilionCode != null" >
        pavilionCode,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="community != null" >
        community,
      </if>
      <if test="addressDetail != null" >
        addressDetail,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="isdefault != null" >
        isdefault,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="pavilionId != null" >
        #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="pavilionCode != null" >
        #{pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        #{district,jdbcType=INTEGER},
      </if>
      <if test="community != null" >
        #{community,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.user.UserAddressExample" resultType="java.lang.Integer" >
    select count(*) from userAddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userAddress
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.pavilionId != null" >
        pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      </if>
      <if test="record.pavilionCode != null" >
        pavilionCode = #{record.pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=INTEGER},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=INTEGER},
      </if>
      <if test="record.community != null" >
        community = #{record.community,jdbcType=INTEGER},
      </if>
      <if test="record.addressDetail != null" >
        addressDetail = #{record.addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postcode != null" >
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.isdefault != null" >
        isdefault = #{record.isdefault,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userAddress
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      pavilionCode = #{record.pavilionCode,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      district = #{record.district,jdbcType=INTEGER},
      community = #{record.community,jdbcType=INTEGER},
      addressDetail = #{record.addressDetail,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      isdefault = #{record.isdefault,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.user.UserAddress" >
    update userAddress
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="pavilionId != null" >
        pavilionId = #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="pavilionCode != null" >
        pavilionCode = #{pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=INTEGER},
      </if>
      <if test="community != null" >
        community = #{community,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        addressDetail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        isdefault = #{isdefault,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.user.UserAddress" >
    update userAddress
    set userId = #{userId,jdbcType=BIGINT},
      pavilionId = #{pavilionId,jdbcType=INTEGER},
      pavilionCode = #{pavilionCode,jdbcType=VARCHAR},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      community = #{community,jdbcType=INTEGER},
      addressDetail = #{addressDetail,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      postcode = #{postcode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      isdefault = #{isdefault,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>