<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.activity.GoodsCommentMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.activity.GoodsComment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="orderId" property="orderId" jdbcType="BIGINT" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="goodsId" property="goodsId" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reply" property="reply" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="isAnonymous" property="isAnonymous" jdbcType="INTEGER" />
    <result column="pics" property="pics" jdbcType="VARCHAR" />
    <result column="isVerify" property="isVerify" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="isDel" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderId, userId, goodsId, content, reply, grade, isAnonymous, pics, isVerify, 
    createTime, isDel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.sls.dto.activity.GoodsCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goodsComment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from goodsComment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goodsComment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.activity.GoodsCommentExample" >
    delete from goodsComment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.activity.GoodsComment" >
    insert into goodsComment (id, orderId, userId, 
      goodsId, content, reply, 
      grade, isAnonymous, pics, 
      isVerify, createTime, isDel
      )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{goodsId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{reply,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{isAnonymous,jdbcType=INTEGER}, #{pics,jdbcType=VARCHAR}, 
      #{isVerify,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.activity.GoodsComment" >
    insert into goodsComment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="goodsId != null" >
        goodsId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="isAnonymous != null" >
        isAnonymous,
      </if>
      <if test="pics != null" >
        pics,
      </if>
      <if test="isVerify != null" >
        isVerify,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="isDel != null" >
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="isAnonymous != null" >
        #{isAnonymous,jdbcType=INTEGER},
      </if>
      <if test="pics != null" >
        #{pics,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        #{isVerify,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.activity.GoodsCommentExample" resultType="java.lang.Integer" >
    select count(*) from goodsComment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goodsComment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        orderId = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null" >
        goodsId = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.reply != null" >
        reply = #{record.reply,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.isAnonymous != null" >
        isAnonymous = #{record.isAnonymous,jdbcType=INTEGER},
      </if>
      <if test="record.pics != null" >
        pics = #{record.pics,jdbcType=VARCHAR},
      </if>
      <if test="record.isVerify != null" >
        isVerify = #{record.isVerify,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        isDel = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goodsComment
    set id = #{record.id,jdbcType=BIGINT},
      orderId = #{record.orderId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      goodsId = #{record.goodsId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      reply = #{record.reply,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      isAnonymous = #{record.isAnonymous,jdbcType=INTEGER},
      pics = #{record.pics,jdbcType=VARCHAR},
      isVerify = #{record.isVerify,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      isDel = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.activity.GoodsComment" >
    update goodsComment
    <set >
      <if test="orderId != null" >
        orderId = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goodsId = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="isAnonymous != null" >
        isAnonymous = #{isAnonymous,jdbcType=INTEGER},
      </if>
      <if test="pics != null" >
        pics = #{pics,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        isVerify = #{isVerify,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.activity.GoodsComment" >
    update goodsComment
    set orderId = #{orderId,jdbcType=BIGINT},
      userId = #{userId,jdbcType=BIGINT},
      goodsId = #{goodsId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      reply = #{reply,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      isAnonymous = #{isAnonymous,jdbcType=INTEGER},
      pics = #{pics,jdbcType=VARCHAR},
      isVerify = #{isVerify,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      isDel = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>