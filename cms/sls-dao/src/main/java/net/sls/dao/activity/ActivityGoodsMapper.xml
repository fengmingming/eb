<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.activity.ActivityGoodsMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.activity.ActivityGoods" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="actId" property="actId" jdbcType="BIGINT" />
    <result column="actType" property="actType" jdbcType="INTEGER" />
    <result column="goodsId" property="goodsId" jdbcType="BIGINT" />
    <result column="actPrice" property="actPrice" jdbcType="DECIMAL" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, actId, actType, goodsId, actPrice, startTime, endTime, number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.sls.dto.activity.ActivityGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from activityGoods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from activityGoods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from activityGoods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.activity.ActivityGoodsExample" >
    delete from activityGoods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.activity.ActivityGoods" >
    insert into activityGoods (id, actId, actType, 
      goodsId, actPrice, startTime, 
      endTime, number)
    values (#{id,jdbcType=BIGINT}, #{actId,jdbcType=BIGINT}, #{actType,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=BIGINT}, #{actPrice,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.activity.ActivityGoods" >
    insert into activityGoods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="actId != null" >
        actId,
      </if>
      <if test="actType != null" >
        actType,
      </if>
      <if test="goodsId != null" >
        goodsId,
      </if>
      <if test="actPrice != null" >
        actPrice,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="endTime != null" >
        endTime,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="actId != null" >
        #{actId,jdbcType=BIGINT},
      </if>
      <if test="actType != null" >
        #{actType,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="actPrice != null" >
        #{actPrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.activity.ActivityGoodsExample" resultType="java.lang.Integer" >
    select count(*) from activityGoods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activityGoods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.actId != null" >
        actId = #{record.actId,jdbcType=BIGINT},
      </if>
      <if test="record.actType != null" >
        actType = #{record.actType,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goodsId = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.actPrice != null" >
        actPrice = #{record.actPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null" >
        startTime = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        endTime = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activityGoods
    set id = #{record.id,jdbcType=BIGINT},
      actId = #{record.actId,jdbcType=BIGINT},
      actType = #{record.actType,jdbcType=INTEGER},
      goodsId = #{record.goodsId,jdbcType=BIGINT},
      actPrice = #{record.actPrice,jdbcType=DECIMAL},
      startTime = #{record.startTime,jdbcType=TIMESTAMP},
      endTime = #{record.endTime,jdbcType=TIMESTAMP},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.activity.ActivityGoods" >
    update activityGoods
    <set >
      <if test="actId != null" >
        actId = #{actId,jdbcType=BIGINT},
      </if>
      <if test="actType != null" >
        actType = #{actType,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goodsId = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="actPrice != null" >
        actPrice = #{actPrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.activity.ActivityGoods" >
    update activityGoods
    set actId = #{actId,jdbcType=BIGINT},
      actType = #{actType,jdbcType=INTEGER},
      goodsId = #{goodsId,jdbcType=BIGINT},
      actPrice = #{actPrice,jdbcType=DECIMAL},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>