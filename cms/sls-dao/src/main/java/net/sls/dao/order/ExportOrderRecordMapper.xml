<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.order.ExportOrderRecordMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.order.ExportOrderRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="exportNum" property="exportNum" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="lastExportTime" property="lastExportTime" jdbcType="TIMESTAMP" />
    <result column="operId" property="operId" jdbcType="BIGINT" />
    <result column="startdate" property="startdate" jdbcType="TIMESTAMP" />
    <result column="enddate" property="enddate" jdbcType="TIMESTAMP" />
    <result column="isDel" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, exportNum, createTime, number, state, lastExportTime, operId, startdate, enddate, 
    isDel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.sls.dto.order.ExportOrderRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exportOrderRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from exportOrderRecord
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from exportOrderRecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.order.ExportOrderRecordExample" >
    delete from exportOrderRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.order.ExportOrderRecord" >
    insert into exportOrderRecord (id, exportNum, createTime, 
      number, state, lastExportTime, 
      operId, startdate, enddate, 
      isDel)
    values (#{id,jdbcType=BIGINT}, #{exportNum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{number,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{lastExportTime,jdbcType=TIMESTAMP}, 
      #{operId,jdbcType=BIGINT}, #{startdate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.order.ExportOrderRecord" >
    insert into exportOrderRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="exportNum != null" >
        exportNum,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastExportTime != null" >
        lastExportTime,
      </if>
      <if test="operId != null" >
        operId,
      </if>
      <if test="startdate != null" >
        startdate,
      </if>
      <if test="enddate != null" >
        enddate,
      </if>
      <if test="isDel != null" >
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="exportNum != null" >
        #{exportNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastExportTime != null" >
        #{lastExportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operId != null" >
        #{operId,jdbcType=BIGINT},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.order.ExportOrderRecordExample" resultType="java.lang.Integer" >
    select count(*) from exportOrderRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exportOrderRecord
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.exportNum != null" >
        exportNum = #{record.exportNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.lastExportTime != null" >
        lastExportTime = #{record.lastExportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operId != null" >
        operId = #{record.operId,jdbcType=BIGINT},
      </if>
      <if test="record.startdate != null" >
        startdate = #{record.startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enddate != null" >
        enddate = #{record.enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        isDel = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exportOrderRecord
    set id = #{record.id,jdbcType=BIGINT},
      exportNum = #{record.exportNum,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      number = #{record.number,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      lastExportTime = #{record.lastExportTime,jdbcType=TIMESTAMP},
      operId = #{record.operId,jdbcType=BIGINT},
      startdate = #{record.startdate,jdbcType=TIMESTAMP},
      enddate = #{record.enddate,jdbcType=TIMESTAMP},
      isDel = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.order.ExportOrderRecord" >
    update exportOrderRecord
    <set >
      <if test="exportNum != null" >
        exportNum = #{exportNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastExportTime != null" >
        lastExportTime = #{lastExportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operId != null" >
        operId = #{operId,jdbcType=BIGINT},
      </if>
      <if test="startdate != null" >
        startdate = #{startdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null" >
        enddate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        isDel = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.order.ExportOrderRecord" >
    update exportOrderRecord
    set exportNum = #{exportNum,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      lastExportTime = #{lastExportTime,jdbcType=TIMESTAMP},
      operId = #{operId,jdbcType=BIGINT},
      startdate = #{startdate,jdbcType=TIMESTAMP},
      enddate = #{enddate,jdbcType=TIMESTAMP},
      isDel = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>