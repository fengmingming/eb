<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sls.dao.product.ProviderMapper" >
  <resultMap id="BaseResultMap" type="net.sls.dto.product.Provider" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="providerName" property="providerName" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="contactName" property="contactName" jdbcType="VARCHAR" />
    <result column="licensePhoto" property="licensePhoto" jdbcType="VARCHAR" />
    <result column="areaCode" property="areaCode" jdbcType="VARCHAR" />
    <result column="isVerify" property="isVerify" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="verifyTime" property="verifyTime" jdbcType="TIMESTAMP" />
    <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, providerName, logo, address, tel, fax, contactName, licensePhoto, areaCode, isVerify, 
    createTime, verifyTime, modifyTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.sls.dto.product.ProviderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from provider
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from provider
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.sls.dto.product.ProviderExample" >
    delete from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.sls.dto.product.Provider" >
    insert into provider (id, providerName, logo, 
      address, tel, fax, 
      contactName, licensePhoto, areaCode, 
      isVerify, createTime, verifyTime, 
      modifyTime)
    values (#{id,jdbcType=BIGINT}, #{providerName,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{contactName,jdbcType=VARCHAR}, #{licensePhoto,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, 
      #{isVerify,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{verifyTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.sls.dto.product.Provider" >
    insert into provider
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="providerName != null" >
        providerName,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="contactName != null" >
        contactName,
      </if>
      <if test="licensePhoto != null" >
        licensePhoto,
      </if>
      <if test="areaCode != null" >
        areaCode,
      </if>
      <if test="isVerify != null" >
        isVerify,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="verifyTime != null" >
        verifyTime,
      </if>
      <if test="modifyTime != null" >
        modifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="providerName != null" >
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="licensePhoto != null" >
        #{licensePhoto,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        #{isVerify,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyTime != null" >
        #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.sls.dto.product.ProviderExample" resultType="java.lang.Integer" >
    select count(*) from provider
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update provider
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.providerName != null" >
        providerName = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contactName = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.licensePhoto != null" >
        licensePhoto = #{record.licensePhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null" >
        areaCode = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isVerify != null" >
        isVerify = #{record.isVerify,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifyTime != null" >
        verifyTime = #{record.verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modifyTime = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update provider
    set id = #{record.id,jdbcType=BIGINT},
      providerName = #{record.providerName,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      contactName = #{record.contactName,jdbcType=VARCHAR},
      licensePhoto = #{record.licensePhoto,jdbcType=VARCHAR},
      areaCode = #{record.areaCode,jdbcType=VARCHAR},
      isVerify = #{record.isVerify,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      verifyTime = #{record.verifyTime,jdbcType=TIMESTAMP},
      modifyTime = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.sls.dto.product.Provider" >
    update provider
    <set >
      <if test="providerName != null" >
        providerName = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contactName = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="licensePhoto != null" >
        licensePhoto = #{licensePhoto,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        areaCode = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        isVerify = #{isVerify,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyTime != null" >
        verifyTime = #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sls.dto.product.Provider" >
    update provider
    set providerName = #{providerName,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      contactName = #{contactName,jdbcType=VARCHAR},
      licensePhoto = #{licensePhoto,jdbcType=VARCHAR},
      areaCode = #{areaCode,jdbcType=VARCHAR},
      isVerify = #{isVerify,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      verifyTime = #{verifyTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>